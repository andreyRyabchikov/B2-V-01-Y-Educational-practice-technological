import java.util.Scanner;

/*
 * –ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ç—Ä–µ–Ω–∞–∂—ë—Ä –¥–ª—è —É—á–µ–Ω–∏–∫–æ–≤ 3-4 –∫–ª–∞—Å—Å–æ–≤
 *
 * –û—Å–Ω–æ–≤–Ω–∞—è –∑–∞–¥–∞—á–∞ –ø—Ä–æ–µ–∫—Ç–∞:
 * –†–∞–∑–≤–∏—Ç–∏–µ –∏ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏–µ –±–∞–∑–æ–≤—ã—Ö –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–∏—Ö –Ω–∞–≤—ã–∫–æ–≤ —á–µ—Ä–µ–∑ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è
 *
 * –°–æ—Å—Ç–∞–≤ –ø—Ä–æ–µ–∫—Ç–∞:
 * - MathQuiz:         –ì–ª–∞–≤–Ω—ã–π –∫–ª–∞—Å—Å, —É–ø—Ä–∞–≤–ª—è—é—â–∏–π –ø–æ—Ç–æ–∫–æ–º –ø—Ä–æ–≥—Ä–∞–º–º—ã
 * - MathProblem:      –•—Ä–∞–Ω–∏—Ç –¥–∞–Ω–Ω—ã–µ –æ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –∑–∞–¥–∞—á–µ (—á–∏—Å–ª–∞, –æ–ø–µ—Ä–∞—Ç–æ—Ä, –æ—Ç–≤–µ—Ç)
 * - ScoreManager:     –û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –ø–æ–¥—Å—á—ë—Ç –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
 * - ProblemGenerator: –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–µ –∑–∞–¥–∞—á–∏ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞
 *
 * –û—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª:
 * 1. –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –≤—ã–±–æ—Ä —Ç–∏–ø–∞ –∑–∞–¥–∞–Ω–∏–π
 * 2. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø—Ä–∏–º–µ—Ä–æ–≤:
 *    - –°–ª–æ–∂–µ–Ω–∏–µ: —á–∏—Å–ª–∞ –¥–æ 50
 *    - –í—ã—á–∏—Ç–∞–Ω–∏–µ: –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
 *    - –£–º–Ω–æ–∂–µ–Ω–∏–µ: —Ç–∞–±–ª–∏—Ü–∞ –¥–æ 10√ó10
 * 3. –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –ø–æ–¥—Å—á—ë—Ç–∞ –æ—á–∫–æ–≤
 * 4. –ú–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω–∞—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å
 * 5. –ü—Ä–æ—Å—Ç–æ–π —Ç–µ–∫—Å—Ç–æ–≤—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Å –ø–æ–¥—Å–∫–∞–∑–∫–∞–º–∏
 *
 * –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:
 * 1. –°–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞—Ç—å: javac MathQuiz.java
 * 2. –ó–∞–ø—É—Å—Ç–∏—Ç—å:      java MathQuiz
 * 3. –°–ª–µ–¥–æ–≤–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –Ω–∞ —ç–∫—Ä–∞–Ω–µ
 */
public class MathQuiz {
    private static final int TOTAL_QUESTIONS = 5;

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.println("üåû –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ç—Ä–µ–Ω–∞–∂—ë—Ä! üåû");
        int operation = selectOperation(scanner);

        ScoreManager scoreManager = new ScoreManager(TOTAL_QUESTIONS);
        processQuiz(scanner, operation, scoreManager);

        scanner.close();
    }

    private static int selectOperation(Scanner scanner) {
        System.out.println("\n–í—ã–±–µ—Ä–∏ –æ–ø–µ—Ä–∞—Ü–∏—é:");
        System.out.println("1 - –°–ª–æ–∂–µ–Ω–∏–µ");
        System.out.println("2 - –í—ã—á–∏—Ç–∞–Ω–∏–µ");
        System.out.println("3 - –£–º–Ω–æ–∂–µ–Ω–∏–µ");
        System.out.print("‚û§ –¢–≤–æ–π –≤—ã–±–æ—Ä: ");
        return scanner.nextInt();
    }

    private static void processQuiz(Scanner scanner, int operation, ScoreManager scoreManager) {
        System.out.println("\n‚úé –†–µ—à–∏ " + TOTAL_QUESTIONS + " –ø—Ä–∏–º–µ—Ä–æ–≤:");
        ProblemGenerator generator = new ProblemGenerator(operation);

        for (int i = 1; i <= TOTAL_QUESTIONS; i++) {
            MathProblem problem = generator.generateProblem();
            askQuestion(i, problem, scanner, scoreManager);
        }

        scoreManager.printFinalResult();
    }

    private static void askQuestion(int questionNumber, MathProblem problem,
                                    Scanner scanner, ScoreManager scoreManager) {
        System.out.print("–ü—Ä–∏–º–µ—Ä " + questionNumber + ": " + problem.getQuestion());
        int userAnswer = scanner.nextInt();

        if (userAnswer == problem.getCorrectAnswer()) {
            System.out.println("‚úÖ –í–µ—Ä–Ω–æ!\n");
            scoreManager.incrementCorrectAnswers();
        } else {
            System.out.println("‚ùå –ù–µ–≤–µ—Ä–Ω–æ. –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: " + problem.getCorrectAnswer() + "\n");
        }
    }
}